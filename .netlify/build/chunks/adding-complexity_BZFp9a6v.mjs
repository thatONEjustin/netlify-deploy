const id = "adding-complexity.md";
						const collection = "blog";
						const slug = "adding-complexity";
						const body = "## So the theme selector was a little hard coded. \nSo I was using this alpine for a day or two for my site color selector: \n\n```js\n{% raw %}\nexport default function Themes() {\n    return {\n        themeChoices: ['default', 'neon'],\n        current: 'default',\n\n        choose(choice) {\n            this.current = choice;\n        },\n  \n        baseThemeClass() {\n            return {\n                'Content--dark' : this.current == 'default',\n                'Content--dark Content--neon': this.current == 'neon',\n            };\n        },\n\n        choicePreview(choice) {\n            return {\n                'bg-yellow-500' : choice == 'default',\n                'bg-red-500' : choice == 'neon'\n            }\n        }\n    }\n}\n{% endraw %}\n```\n\nBut this was mostly just a hastily put together solution as a proof of concept for adjusting a website's classes based on user input. \n\nSince I wanted to make this more extensible, it's pretty obvious to move the `choicePreview(choice)` and `baseThemeClass` returns out of those functions.\n\nMoving the container and preview classes to a new `palettes` collection also simplifies setting the classes easy. Just grab whatever theme/palette matches the current choice:\n```js\n{% raw %}\nexport default function themes() {\n    return {\n        palettes: [\n            {\n                name: 'default',\n                container: 'Content--dark',\n                preview: 'bg-yellow-500'\n            },\n            {\n                name: 'neon',\n                container: 'Content--dark Content--neon',\n                preview: 'bg-red-500'\n            },\n            {\n                name: 'light',\n                container: 'Content--light',\n                preview: 'bg-white'\n            },\n\n        ],\n\n        current: 'default',\n        \n        choose(choice) {\n            if(this.current != choice) {\n                this.current = choice;\n            }\n        },\n\n        baseThemeClass() {\n            return this.palettes.find(container => container.name == this.current).container;\n        },\n\n        choicePreview(choice) {\n            if(!choice) {\n                return;\n            }\n\n            return this.palettes.find(bg => bg.name == choice).preview;\n        }\n    }\n}\n{% endraw %}\n```";
						const data = {title:"Upgrading from themes to a Palette Selector",summary:"So I moved to a more programmatic solution to my 'theme' selector.",date:new Date(1690002000000)};
						const _internal = {
							type: 'content',
							filePath: "/home/justinprime/github/netlify-deploy/src/content/blog/adding-complexity.md",
							rawData: undefined,
						};

export { _internal, body, collection, data, id, slug };
