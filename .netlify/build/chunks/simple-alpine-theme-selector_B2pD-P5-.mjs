const id = "simple-alpine-theme-selector.md";
						const collection = "blog";
						const slug = "simple-alpine-theme-selector";
						const body = "## This is out of date, I'll be updating things as I move forward\n\n## Okay so instead of 1 color scheme, I built a theme selector\n\nThe code will be below. For now this is just a really really really basic example of swapping classes in and out. I think with how I wrote the components, I'll assign elements to the schema in a more efficient way. I just wanted progress for now.\n\nhere's some HTML:\n```html\n<body x-data=\"Themes\">\n\t<main>\n\t\t{% raw %}\n\t\t{% include header.html %} <!-- this is jekyll/liquid -->\n\t\t{% endraw %}\n\t\t<section\n\t\t\tclass=\"Content Content--bubbles p-5\"\n\t\t\t:class=\"baseThemeClass\">\n\t\t\t{% raw %}\n\t\t\t{{ content }} <!-- this is jekyll/liquid -->\n\t\t\t{% endraw %}\n\t\t</section>\n\t</main>\n\t{% raw %}\n\t{% include footer.html %} <!-- this is jekyll/liquid -->\n\n\t<script defer src=\"{{ \"/assets/js/app.js\" | relative_url }}\"></script>\n\t{% endraw %}\n</body>\n```\n\ninside footer.html: \n```html\n{% raw %}\n<ul class=\"ThemeSelector\">\n\t<li class=\"ThemeSelector-label\">theme: </li>\n\n\t<template x-for=\"choice in themeChoices\">\n\t<li>\n\t\t<a\n\t\t\tclass=\"ThemeSelector-choice\"\n\t\t\t@click.prevent=\"choose(choice)\"\n\t\t\t:data-theme=\"`${choice}`\"\n\t\t\t:class=\"choicePreview(choice)\"></a>\n\t</li>\n\t</template>\n</ul>\n{% endraw %}\n```\n\nHere's some alpine:\n```js\n{% raw %}\nexport default function Themes() {\n    return {\n        themeChoices: ['default', 'neon'],\n        current: 'default',\n\n        choose(choice) {\n            this.current = choice;\n        },\n  \n        baseThemeClass() {\n            return {\n                'Content--dark' : this.current == 'default',\n                'Content--dark Content--neon': this.current == 'neon',\n            };\n        },\n\n        choicePreview(choice) {\n            return {\n                'bg-yellow-500' : choice == 'default',\n                'bg-red-500' : choice == 'neon'\n            }\n        }\n    }\n}\n{% endraw %}\n```\n\nCSS (using tailwind/@latest):\n```css\n{% raw %}\n.ThemeSelector {\n    @apply\n        flex\n        flex-row\n        items-center\n        mr-8;\n  \n    li {\n        @apply\n            mr-1\n            cursor-pointer;\n    }\n  \n    &-choice {\n        @apply\n            w-[16px]\n            h-[16px]\n            block\n            border-2\n            border-black\n            transition-all\n            ease-linear;\n\n        &:hover {\n            @apply\n                border-0;\n        }\n    }\n    \n    &-label {\n        @apply\n            text-yellow-500\n            font-bold\n            text-sm;\n    }\n}\n{% endraw %}\n```";
						const data = {title:"Simple Alpine Theme Selector",summary:"Okay so I've learned some things about Jekyll front matter, and properlly formatted posts. But this is about a theme selector.",date:new Date(1690002000000)};
						const _internal = {
							type: 'content',
							filePath: "/home/justinprime/github/netlify-deploy/src/content/blog/simple-alpine-theme-selector.md",
							rawData: undefined,
						};

export { _internal, body, collection, data, id, slug };
